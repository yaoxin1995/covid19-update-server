openapi: "3.0.0"
info:
  description: "SCC WS2020 Group8"
  version: "1.1.0"
  title: "Notification service api documentation"
servers:
  - url: http://127.0.0.1
paths:
  /notification:
    get:
      tags:
      - "notification"
      summary: "List all notifications"
      parameters:
      - in: query
        name: "recipient"
        description: "Name of the recipient to list messages from."
        schema:
          type: string
        required: false
      responses:
        200:
          description: "Return found notifications in a list."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/Notification'
            application/hal+json:
              schema:
                  type: object
                  required:
                  - "id"
                  - "creation_date"
                  - "recipient"
                  - "msg"
                  properties:
                    _links:
                      type: "object"
                      readOnly: true
                      description: Link relations following the HAL schema
                      properties:
                        self:
                          type: "object"
                          properties:
                            href:
                              type: "string"
                              example: "/notification"
                    _embedded:
                      type: "object"
                      description: "Embedded resources following the HAL schema"
                      properties:
                        notifications:
                          description: "List of all notifications"
                          type: "array"
                          items:
                            type: "object"
                            properties:
                              id:
                                type: "integer"
                                example: 12
                              creation_date:
                                type: "string"
                                example: "2020-12-02 20:49:36.653"
                                description: "DateTime string in UTC time format."
                              recipient:
                                type: "string"
                                example: "0123456789"
                                description: "Telegram chat id"
                              msg:
                                type: "string"
                                example: "This is a message."
                                description: "Message to send to recipient."
                              error_msg:
                                type: "string"
                                format: "json"
                                example: '{"request_error": null, "status_code": 200, "telegram_response": {"ok": true, "result": {"message_id": 188, "from": {"id": 1408066607, "is_bot": true, "first_name": "bot_first_name", "username": "botusername"}, "chat": {"id": 12345678, "first_name": "Max", "username": "MaxMustermann", "type": "private"}, "date": 1606942176, "text": "This is a new message."}}}'
                                description: "JSON response containing of three objects: `request_error`,
                                `status_code` and `telegram_response`.
                                `request_error` contains
                                information if network error occurred while contacting Telegram API.
                                `status_code` is the HTTP status code returned by Telegram API.
                                `telegram_response` is a
                                [response object](https://core.telegram.org/bots/api#making-requests)
                                generated by Telegram API."
                              error_msg_human_readable:
                                type: "string"
                                enum:
                                 - Connection error
                                 - General network error
                                 - Unknown error
                                description: "Contains human readable error message if something went
                                wrong during sending message to Telegram API."
        404:
          description: "Couldn't find notifications of specified recipient."
    post:
      tags:
      - "notification"
      summary: "Add new notification"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                recipient:
                  description: "Name of the recipient to send a message to."
                  type: "string"
                msg:
                  description: "Message to send."
                  type: "string"
              required:
               - recipient
               - msg
      responses:
        "201":
          description: "Notification was created. Nevertheless, this doesn't necessarily mean that the message was successfully sent to Telegram."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
            application/hal+json:
              schema:
                type: "object"
                required:
                - "id"
                - "creation_date"
                - "recipient"
                - "msg"
                properties:
                  _links:
                    type: "object"
                    readOnly: true
                    description: Link relations following the HAL schema
                    properties:
                      self:
                        type: "object"
                        properties:
                          href:
                            type: "string"
                            example: "/notification/12"
                  id:
                    type: "integer"
                    example: 12
                  creation_date:
                    type: "string"
                    example: "2020-12-02 20:49:36.653"
                    description: "DateTime string in UTC time format."
                  recipient:
                    type: "string"
                    example: "0123456789"
                    description: "Telegram chat id"
                  msg:
                    type: "string"
                    example: "This is a message."
                    description: "Message to send to recipient."
                  error_msg:
                    type: "string"
                    format: "json"
                    example: '{"request_error": null, "status_code": 200, "telegram_response": {"ok": true, "result": {"message_id": 188, "from": {"id": 1408066607, "is_bot": true, "first_name": "bot_first_name", "username": "botusername"}, "chat": {"id": 12345678, "first_name": "Max", "username": "MaxMustermann", "type": "private"}, "date": 1606942176, "text": "This is a new message."}}}'
                    description: "JSON response containing of three objects: `request_error`,
                    `status_code` and `telegram_response`.
                    `request_error` contains
                    information if network error occurred while contacting Telegram API.
                    `status_code` is the HTTP status code returned by Telegram API.
                    `telegram_response` is a
                    [response object](https://core.telegram.org/bots/api#making-requests)
                    generated by Telegram API."
                  error_msg_human_readable:
                    type: "string"
                    enum:
                     - Connection error
                     - General network error
                     - Unknown error
                    description: "Contains human readable error message if something went
                    wrong during sending message to Telegram API."
        "400":
          description: "A required argument is missing."
  /notification/{notification_id}:
    get:
      tags:
      - "notification"
      summary: "Get notification by id"
      parameters:
      - in: "path"
        name: "notification_id"
        description: "Notification id."
        required: true
        schema:
          type: integer
          minimum: 0
      responses:
        "200":
          description: "Found notification with specified id."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
            application/hal+json:
              schema:
                type: "object"
                required:
                - "id"
                - "creation_date"
                - "recipient"
                - "msg"
                properties:
                  _links:
                    type: "object"
                    readOnly: true
                    description: Link relations following the HAL schema
                    properties:
                      self:
                        type: "object"
                        properties:
                          href:
                            type: "string"
                            example: "/notification/12"
                  id:
                    type: "integer"
                    example: 12
                  creation_date:
                    type: "string"
                    example: "2020-12-02 20:49:36.653"
                    description: "DateTime string in UTC time format."
                  recipient:
                    type: "string"
                    example: "0123456789"
                    description: "Telegram chat id"
                  msg:
                    type: "string"
                    example: "This is a message."
                    description: "Message to send to recipient."
                  error_msg:
                    type: "string"
                    format: "json"
                    example: '{"request_error": null, "status_code": 200, "telegram_response": {"ok": true, "result": {"message_id": 188, "from": {"id": 1408066607, "is_bot": true, "first_name": "bot_first_name", "username": "botusername"}, "chat": {"id": 12345678, "first_name": "Max", "username": "MaxMustermann", "type": "private"}, "date": 1606942176, "text": "This is a new message."}}}'
                    description: "JSON response containing of three objects: `request_error`,
                    `status_code` and `telegram_response`.
                    `request_error` contains
                    information if network error occurred while contacting Telegram API.
                    `status_code` is the HTTP status code returned by Telegram API.
                    `telegram_response` is a
                    [response object](https://core.telegram.org/bots/api#making-requests)
                    generated by Telegram API."
                  error_msg_human_readable:
                    type: "string"
                    enum:
                     - Connection error
                     - General network error
                     - Unknown error
                    description: "Contains human readable error message if something went
                    wrong during sending message to Telegram API."
        "404":
          description: "Couldn't find notifications with specified id."
components:
  schemas:
    Notification:
      type: "object"
      required:
      - "id"
      - "creation_date"
      - "recipient"
      - "msg"
      properties:
        id:
          type: "integer"
          example: 12
        creation_date:
          type: "string"
          example: "2020-12-02 20:49:36.653"
          description: "DateTime string in UTC time format."
        recipient:
          type: "string"
          example: "0123456789"
          description: "Telegram chat id"
        msg:
          type: "string"
          example: "This is a message."
          description: "Message to send to recipient."
        error_msg:
          type: "string"
          format: "json"
          example: '{"request_error": null, "status_code": 200, "telegram_response": {"ok": true, "result": {"message_id": 188, "from": {"id": 1408066607, "is_bot": true, "first_name": "bot_first_name", "username": "botusername"}, "chat": {"id": 12345678, "first_name": "Max", "username": "MaxMustermann", "type": "private"}, "date": 1606942176, "text": "This is a new message."}}}'
          description: "JSON response containing of three objects: `request_error`,
          `status_code` and `telegram_response`.
          `request_error` contains
          information if network error occurred while contacting Telegram API.
          `status_code` is the HTTP status code returned by Telegram API.
          `telegram_response` is a
          [response object](https://core.telegram.org/bots/api#making-requests)
          generated by Telegram API."
        error_msg_human_readable:
          type: "string"
          enum:
           - Connection error
           - General network error
           - Unknown error
          description: "Contains human readable error message if something went
          wrong during sending message to Telegram API."